# Pre-commit hooks configuration for bisq2-support-agent
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General file formatting and cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
        exclude: ^(api/data/|web/node_modules/)
      - id: end-of-file-fixer
        name: Fix end of files
        exclude: ^(api/data/|web/node_modules/)
      - id: check-yaml
        name: Check YAML syntax
        args: ['--unsafe']  # Allow custom tags in docker-compose
      - id: check-json
        name: Check JSON syntax
        exclude: ^(web/package-lock\.json|api/data/)
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Check line endings
        args: ['--fix=lf']

  # Python: Black code formatter
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format Python code with Black
        language_version: python3.13
        files: ^api/
        exclude: ^(api/venv/|api/data/)

  # Python: isort import sorter
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort Python imports with isort
        files: ^api/
        exclude: ^(api/venv/|api/data/)
        args: ['--profile', 'black']

  # Python: mypy type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: Type check Python code with mypy
        files: ^api/app/
        exclude: ^(api/venv/|api/data/)
        args: [
          '--ignore-missing-imports',
          '--no-strict-optional',
          '--warn-redundant-casts',
          '--warn-unused-ignores',
        ]
        additional_dependencies:
          - types-requests
          - types-python-dateutil

  # Python: flake8 linting (light mode - main checks done by black/mypy)
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint Python code with flake8
        files: ^api/
        exclude: ^(api/venv/|api/data/)
        args: [
          '--max-line-length=88',  # Match Black
          '--extend-ignore=E203,W503,E501',  # Compatibility with Black
          '--exclude=venv,__pycache__,.git,data',
        ]

  # Python: pytest (fast tests only for pre-commit)
  - repo: local
    hooks:
      - id: pytest-check
        name: Run fast pytest tests
        entry: bash -c 'cd api && python -m pytest tests/ -m "not slow" -x --tb=short --quiet'
        language: system
        pass_filenames: false
        always_run: false
        stages: [pre-commit]
        files: ^api/(app|tests)/.*\.py$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        name: Lint Markdown files
        args: ['--fix']
        exclude: ^(QUALITY_ASSESSMENT_REPORT\.md|TESTING_SETUP_SUMMARY\.md|web/node_modules/)

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [
          '-d',
          '{extends: default, rules: {line-length: {max: 120}, indentation: {spaces: 2}}}'
        ]
        exclude: ^(docker/|web/node_modules/)

# Configuration for specific hooks
exclude: |
  (?x)^(
      api/venv/.*|
      api/data/.*|
      api/__pycache__/.*|
      web/node_modules/.*|
      web/.next/.*|
      \.git/.*|
      .*\.pyc|
      QUALITY_ASSESSMENT_REPORT\.md|
      TESTING_SETUP_SUMMARY\.md
  )$

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'

# Default stages for hooks
default_stages: [pre-commit]

# Fail fast on first error
fail_fast: false
