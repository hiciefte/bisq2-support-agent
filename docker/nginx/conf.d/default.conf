# Main server configuration
server {
    listen 80;
    server_name _;  # Catch-all for IP-based access

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # Special protection for admin endpoints - internal only
    location /api/admin/ {
        # Only allow internal access
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker network
        deny all;

        # Stricter rate limiting for admin endpoints
        limit_req zone=admin burst=3 nodelay;

        # Security headers for admin
        include /etc/nginx/conf.d/security.conf;

        proxy_pass http://api:8000/admin/;
        proxy_http_version 1.1;
        proxy_set_header Connection "keep-alive";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass "";
        proxy_read_timeout 180s;

        # Increased buffer settings for admin responses
        proxy_buffer_size 8k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 64k;

        # Connection limits
        limit_conn addr 10;
    }

    # Grafana dashboard access - publicly accessible
    location /grafana/ {
        # Apply rate limiting with a dedicated zone for Grafana
        limit_req zone=grafana burst=10 nodelay;

        # Additional security headers for Grafana
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;

        proxy_pass http://grafana:3000/;
        proxy_http_version 1.1;
        proxy_set_header Connection "keep-alive";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass "";
        proxy_read_timeout 180s;

        # Proxy buffer settings
        proxy_buffer_size 8k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 64k;

        # Connection limits
        limit_conn addr 10;
    }

    # API backend - publicly accessible
    location /api/ {
        # Rate limiting for API endpoints
        limit_req zone=api burst=5 nodelay;

        proxy_pass http://api:8000/;
        proxy_http_version 1.1;

        proxy_set_header Connection "keep-alive";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass "";
        proxy_read_timeout 120s;

        # Disable buffering for API responses
        proxy_buffering off;
        proxy_buffer_size 8k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 64k;

        # Disable gzip compression for this location
        gzip off;
        proxy_set_header Accept-Encoding "";

        # Connection limits
        limit_conn addr 10;
    }

    # Frontend web application (NextJS) - publicly accessible
    location / {
        # Rate limiting for web application
        limit_req zone=web burst=20 nodelay;

        # Security headers for web application
        include /etc/nginx/conf.d/security.conf;

        proxy_pass http://web:3000;
        proxy_http_version 1.1;
        proxy_set_header Connection "keep-alive";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass "";
        proxy_read_timeout 120s;

        # Enable buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 32k;
        proxy_busy_buffers_size 64k;

        # Connection limits
        limit_conn addr 20;
    }

    # Static assets caching - publicly accessible
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Rate limiting for static assets
        limit_req zone=static burst=30 nodelay;

        # Security headers for static assets
        include /etc/nginx/conf.d/security.conf;

        proxy_pass http://web:3000;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;

        # Connection limits
        limit_conn addr 10;
    }

    # Health check endpoint - internal only
    location /health {
        # IP restrictions for health check
        allow 127.0.0.1;
        allow 172.16.0.0/12;
        deny all;

        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    # Error pages
    error_page 404 /error_pages/404.html;
    error_page 500 502 503 504 /error_pages/50x.html;
    error_page 403 /error_pages/403.html;

    # Custom error page for rate limiting (429)
    error_page 429 /error_pages/429.html;

    # Custom error responses
    location = /error_pages/429.html {
        internal;
        add_header Retry-After 30;
        return 429 '{"error": "Too many requests. Please try again later.", "retry_after": 30}';
    }

    # Large uploads configuration
    client_max_body_size 100M;

    # Error logging with reduced buffer for better reliability
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log combined buffer=256k flush=30s;

    # Additional security measures
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to backup and source files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
