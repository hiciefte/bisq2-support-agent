# Define the rate limiting zones at the top of the file (outside server block)
# These lines should be added at the very top of the file, before the server block
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=admin:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=grafana:10m rate=5r/s;

server {
    listen 80;
    listen [::]:80;
    server_name _;  # Catch-all for any server name
    
    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy';
    }
    
    # Special protection for admin endpoints - fixed to use prefix match
    location /api/admin/ {
        # Stricter rate limiting for admin endpoints
        limit_req zone=admin burst=3 nodelay;
        
        # All the standard proxy settings
        proxy_pass http://api:8000/admin/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Reduced timeout for admin operations (was 300s)
        # A more reasonable timeout that still allows for longer operations
        proxy_read_timeout 180s;
    }
    
    # Grafana dashboard access - add before the API location
    location /grafana/ {
        # Apply rate limiting with a dedicated zone for Grafana
        limit_req zone=grafana burst=10 nodelay;
        
        # Proxy to Grafana
        proxy_pass http://grafana:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Longer timeout for dashboard rendering
        proxy_read_timeout 180s;
    }
    
    # API backend (proxied under /api path)
    location /api/ {
        # Adjust burst and add delay to prevent abuse - use nodelay instead of delay
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://api:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 120s;
    }
    
    # Frontend web application (NextJS)
    location / {
        proxy_pass http://web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Enable browser caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web:3000;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    # Custom error page for rate limiting (429)
    error_page 429 /429.html;
    
    # Custom error responses
    location = /429.html {
        internal;
        add_header Retry-After 30;
        return 429 '{"error": "Too many requests. Please try again later.", "retry_after": 30}';
    }
    
    # Large uploads configuration
    client_max_body_size 100M;
} 