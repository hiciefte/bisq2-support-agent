server {
    listen 80;
    server_name _;  # Catch-all for IP-based access

    # Serve static files from this root
    root /usr/share/nginx/html;
    index index.html;

    #------------------------------
    # API Admin (Internal Only)
    #------------------------------
    location /api/admin/ {
        # Only allow internal access
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker network
        deny all;

        # Security headers for admin
        include /etc/nginx/conf.d/snippets/security-headers.conf;

        # Rate limiting rules
        include /etc/nginx/conf.d/snippets/rate-limit.conf;

        # Connection limits
        include /etc/nginx/conf.d/snippets/connection-limits.conf;

        # Proxy settings
        include /etc/nginx/conf.d/snippets/proxy-params.conf;

        proxy_pass http://api:8000/admin/;
        proxy_cache_bypass "";
    }

    #------------------------------
    # Grafana Dashboard
    #------------------------------
    location /grafana/ {
        # Rate limiting rules
        include /etc/nginx/conf.d/snippets/rate-limit.conf;

        # Connection limits
        include /etc/nginx/conf.d/snippets/connection-limits.conf;

        # Additional security headers for Grafana
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Proxy settings
        include /etc/nginx/conf.d/snippets/proxy-params.conf;

        proxy_pass http://grafana:3000/;
    }

    #------------------------------
    # API Backend
    #------------------------------
    location /api/ {
        # Rate limiting rules
        include /etc/nginx/conf.d/snippets/rate-limit.conf;

        # Connection limits
        include /etc/nginx/conf.d/snippets/connection-limits.conf;

        # Proxy settings
        include /etc/nginx/conf.d/snippets/proxy-params.conf;

        proxy_pass http://api:8000/;

        # Disable buffering for API responses
        proxy_buffering off;

        # **Disable gzip compression for this location**
        gzip off;
        proxy_set_header Accept-Encoding "";
    }

    #------------------------------
    # Frontend Web Application (Next.js)
    #------------------------------
    location / {
        # Rate limiting rules
        include /etc/nginx/conf.d/snippets/rate-limit.conf;

        # Security headers for web application
        include /etc/nginx/conf.d/snippets/security-headers.conf;

        # Connection limits
        include /etc/nginx/conf.d/snippets/connection-limits.conf;

        # Proxy settings
        include /etc/nginx/conf.d/snippets/proxy-params.conf;

        proxy_pass http://web:3000;

        # Enable buffering for better performance
        proxy_buffering on;

        # Higher connection limit (20) for web application to support:
        # - Multiple concurrent API calls during page load
        # - WebSocket connections for real-time features
        # - Static asset downloads (images, scripts, styles)
        limit_conn addr 20;
    }

    #------------------------------
    # Static Assets
    #------------------------------
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Rate limiting rules
        include /etc/nginx/conf.d/snippets/rate-limit.conf;
        include /etc/nginx/conf.d/snippets/security-headers.conf;

        # Connection limits
        include /etc/nginx/conf.d/snippets/connection-limits.conf;

        # Proxy settings
        include /etc/nginx/conf.d/snippets/proxy-params.conf;

        proxy_pass http://web:3000;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;

        # Higher connection limit (20) for static assets to support:
        # - Parallel downloads of multiple resources
        # - Efficient loading of images, scripts, and styles
        # - Better performance for modern web applications
        limit_conn addr 20;
    }

    #------------------------------
    # Health Check (Internal Only)
    #------------------------------
    location /health {
        # IP restrictions for health check
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker network
        deny all;

        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    #------------------------------
    # Custom Error Pages
    #------------------------------
    error_page 404 /error_pages/404.html;
    error_page 500 502 503 504 /error_pages/50x.html;
    error_page 403 /error_pages/403.html;

    # Custom error page for rate limiting (429)
    error_page 429 /error_pages/429.html;

    # Custom error responses
    location = /error_pages/429.html {
        internal;
        add_header Retry-After 30;
        return 429 '{"error": "Too many requests. Please try again later.", "retry_after": 30}';
    }

    # Large uploads configuration
    client_max_body_size 100M;

    # Error logging with reduced buffer for better reliability
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log combined buffer=256k flush=30s;

    #------------------------------
    # Prevent Access to Hidden or Backup Files
    #------------------------------
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to backup and source files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
